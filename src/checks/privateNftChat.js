import Chat from '../models/Chat.js';
import getNftBalance from '../utils/getUserBalances/getNftBalance.js';
import { getWalletAddressByUserId } from '../db/userMethods.js';
import { getAllPrivateNftChats } from '../db/chatMethods.js';
import { delay } from '../utils/defay.js';

export async function handlePrivateNftChats(bot) {
    try {
        const privateNftChats = await getAllPrivateNftChats();

        if (!privateNftChats.length) {
            console.log('–ù–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö NFT-—á–∞—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
            return;
        }

        console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö NFT-—á–∞—Ç–æ–≤: ${privateNftChats.length}`);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        bot.on('chat_join_request', async (joinRequest) => {
            const userId = joinRequest?.from?.id;
            const chatId = joinRequest?.chat?.id;
            console.log(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'} –¥–ª—è —á–∞—Ç–∞ ${chatId || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);

            if (!joinRequest || !joinRequest.chat || !joinRequest.from) {
                console.log('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ —á–∞—Ç—É.');
                return;
            }

            const chatDoc = await Chat.findOne({ chatId });
            if (!chatDoc) {
                console.log(`–ß–∞—Ç —Å chatId ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                return;
            }

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∞–¥—Ä–µ—Å–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            if (!chatDoc.nft.collectionAddress) {
                console.log(`–ê–¥—Ä–µ—Å –∫–æ–ª–ª–µ–∫—Ü–∏–∏ NFT –¥–ª—è —á–∞—Ç–∞ ${chatId} –Ω–µ –∑–∞–¥–∞–Ω. –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω.`);
                await bot.declineChatJoinRequest(chatId, userId);
                return;
            }

            // –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∫–æ—à–µ–ª—å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const walletAddress = await getWalletAddressByUserId(userId);
            if (!walletAddress) {
                console.log(`–ö–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—Ä–æ—Å –æ—Ç–∫–ª–æ–Ω—ë–Ω.`);
                await bot.declineChatJoinRequest(chatId, userId);
                return;
            }

            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}, –∫–æ—à–µ–ª–µ–∫: ${walletAddress}`);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–ª–∞–Ω—Å–∞ NFT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try {
                const userNfts = await getNftBalance(walletAddress, chatDoc.nft.collectionAddress);
                const userNftCount = userNfts.length;
                console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${userNftCount}, —Ç—Ä–µ–±—É–µ—Ç—Å—è: ${chatDoc.nft.nftRequirement}`);

                if (userNftCount >= chatDoc.nft.nftRequirement) {
                    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                    await bot.approveChatJoinRequest(chatId, userId);

                    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                    await Chat.updateOne({ chatId }, { $pull: { members: userId.toString() } });
                    const updateResult = await Chat.updateOne(
                        { chatId },
                        { $push: { members: userId.toString() } }
                    );

                    if (updateResult.modifiedCount > 0) {
                        console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –¥–æ–±–∞–≤–ª–µ–Ω –≤ members —á–∞—Ç–∞ ${chatId}.`);
                    } else {
                        console.error(`‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ members —á–∞—Ç–∞ ${chatId}.`);
                    }

                    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                    await bot.sendMessage(
                        chatId,
                        `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${joinRequest.from.first_name || '–Ω–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫'}, –≤ –Ω–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç!`
                    );
                } else {
                    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
                    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ—Ç–∫–ª–æ–Ω—ë–Ω: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT (${userNftCount}) –º–µ–Ω—å—à–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ (${chatDoc.nft.nftRequirement}).`);
                    await bot.declineChatJoinRequest(chatId, userId);
                }
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞ NFT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${error.message}`);
                await bot.declineChatJoinRequest(chatId, userId);
            }
        });

        // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        setInterval(async () => {
            console.log('–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö NFT-—á–∞—Ç–æ–≤.');

            for (const chat of privateNftChats) {
                const chatId = chat.chatId;
                console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç ${chatId}`);

                if (!chat.nft || !chat.nft.collectionAddress) {
                    console.log(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á–∞—Ç ${chatId}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ NFT.`);
                    continue;
                }

                const currentChat = await Chat.findOne({ chatId }).select('members').lean();
                if (!currentChat || !currentChat.members.length) {
                    console.log(`–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —á–∞—Ç–µ ${chatId}.`);
                    continue;
                }

                for (const memberId of currentChat.members) {
                    console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –≤ —á–∞—Ç–µ ${chatId}`);

                    try {
                        const walletAddress = await getWalletAddressByUserId(memberId);
                        if (!walletAddress) {
                            console.log(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞. –£–¥–∞–ª—è–µ–º –∏–∑ —á–∞—Ç–∞.`);
                            await bot.banChatMember(chatId, memberId);
                            await bot.unbanChatMember(chatId, memberId);
                            await Chat.updateOne({ chatId }, { $pull: { members: memberId.toString() } });
                            continue;
                        }

                        const userNfts = await getNftBalance(walletAddress, chat.nft.collectionAddress);
                        const userNftCount = userNfts.length;

                        if (userNftCount < chat.nft.nftRequirement) {
                            console.log(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ NFT. –£–¥–∞–ª—è–µ–º –∏–∑ —á–∞—Ç–∞.`);
                            await bot.banChatMember(chatId, memberId);
                            await bot.unbanChatMember(chatId, memberId);
                            await Chat.updateOne({ chatId }, { $pull: { members: memberId.toString() } });
                        }
                    } catch (error) {
                        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId}: ${error.message}`);
                        if (error.message.includes('USER_NOT_PARTICIPANT')) {
                            console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ ${memberId} –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ —á–∞—Ç–µ. –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã.`);
                            await Chat.updateOne({ chatId }, { $pull: { members: memberId.toString() } });
                        }
                    }

                    await delay(2750);
                }

                await delay(3750);
            }

            console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
        }, 28800000); // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 8 —á–∞—Å–æ–≤
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handlePrivateNftChats:', error.message);
    }
}