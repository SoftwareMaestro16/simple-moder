import Chat from '../models/Chat.js';
import getNftBalance from '../utils/getUserBalances/getNftBalance.js';
import { getWalletAddressByUserId } from '../db/userMethods.js';
import { getAllPrivateNftChats } from '../db/chatMethods.js';
import { delay } from '../utils/defay.js';

export async function handlePrivateNftChats(bot) {
    try {
        const privateNftChats = await getAllPrivateNftChats();

        if (!privateNftChats.length) {
            console.log('–ù–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö NFT-—á–∞—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
            return;
        }

        console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö NFT-—á–∞—Ç–æ–≤: ${privateNftChats.length}`);

        bot.on('chat_join_request', async (joinRequest) => {
            console.log(`–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${joinRequest?.from?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'} –¥–ª—è —á–∞—Ç–∞ ${joinRequest?.chat?.id || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}`);
        
            if (!joinRequest || !joinRequest.chat || !joinRequest.from) {
                console.log('–ü—É—Å—Ç–æ–π –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.');
                return;
            }
        
            const chatId = joinRequest.chat.id;
            const userId = joinRequest.from.id;
        
            const chatDoc = privateNftChats.find((c) => c.chatId === chatId.toString());
            if (!chatDoc) {
                console.log(`–ß–∞—Ç ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ä–µ–¥–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö NFT-—á–∞—Ç–æ–≤, –∑–∞–ø—Ä–æ—Å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è.`);
                return;
            }
        
            const walletAddress = await getWalletAddressByUserId(userId);
        
            if (!walletAddress) {
                await bot.declineChatJoinRequest(chatId, userId);
                console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ—Ç–∫–ª–æ–Ω—ë–Ω: –∫–æ—à–µ–ª—ë–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                return;
            }
        
            console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}, –∫–æ—à–µ–ª—ë–∫: ${walletAddress}`);
        
            const userNfts = await getNftBalance(walletAddress, chatDoc.nft.collectionAddress);
            const userNftCount = userNfts.length;
        
            console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${userNftCount}, —Ç—Ä–µ–±—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${chatDoc.nft.nftRequirement}`);
        
            if (userNftCount >= chatDoc.nft.nftRequirement) {
                await bot.approveChatJoinRequest(chatId, userId);

                const updateResult = await Chat.findOneAndUpdate(
                    { _id: chatDoc._id },
                    { $addToSet: { members: userId.toString() } },
                    { new: true } // –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç
                );
                console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è members:', updateResult);

                if (updateResult.modifiedCount > 0) {
                    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                } else {
                    console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                }
        
                await bot.sendMessage(
                    chatId,
                    `üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${joinRequest.from.first_name}, –≤ –Ω–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π —á–∞—Ç!`,
                );
            } else {
                await bot.declineChatJoinRequest(chatId, userId);
                console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –æ—Ç–∫–ª–æ–Ω—ë–Ω: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT (${userNftCount}) –º–µ–Ω—å—à–µ —Ç—Ä–µ–±—É–µ–º–æ–≥–æ (${chatDoc.nft.nftRequirement}).`);
            }
        });

        setInterval(async () => {
            console.log('–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ —Å NFT.');
        
            for (const chat of privateNftChats) {
                const chatId = chat.chatId;
        
                console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç ${chatId}`);
        
                if (!chat.nft || !chat.nft.collectionAddress) {
                    console.log(`–ü—Ä–æ–ø—É—Å–∫–∞–µ–º —á–∞—Ç ${chatId}: –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ NFT.`);
                    continue;
                }
        
                const currentMembers = await Chat.findOne({ chatId }).select('members').lean();
        
                if (!currentMembers || !currentMembers.members.length) {
                    console.log(`–ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —á–∞—Ç–µ ${chatId}.`);
                    continue;
                }
        
                for (const memberId of currentMembers.members) {
                    console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –≤ —á–∞—Ç–µ ${chatId}`);
        
                    try {
                        const walletAddress = await getWalletAddressByUserId(memberId);
        
                        if (!walletAddress) {
                            console.log(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –Ω–µ—Ç –∫–æ—à–µ–ª—å–∫–∞. –£–¥–∞–ª—è–µ–º –∏–∑ —á–∞—Ç–∞.`);
                            await bot.banChatMember(chatId, memberId);
                            await bot.unbanChatMember(chatId, memberId);
                            const updateResult = await Chat.updateOne(
                                { _id: chat._id },
                                { $pull: { members: memberId } }
                            );

                            if (updateResult.modifiedCount > 0) {
                                console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ ${memberId} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                            } else {
                                console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –∏–∑ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                            }
                            continue;
                        }
        
                        const userNfts = await getNftBalance(walletAddress, chat.nft.collectionAddress);
                        const userNftCount = userNfts.length;
        
                        console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ NFT —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId}: ${userNftCount}, —Ç—Ä–µ–±—É–µ–º–æ–µ: ${chat.nft.nftRequirement}`);
        
                        if (userNftCount < chat.nft.nftRequirement) {
                            console.log(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ NFT. –£–¥–∞–ª—è–µ–º –∏–∑ —á–∞—Ç–∞.`);
                            await bot.banChatMember(chatId, memberId);
                            await bot.unbanChatMember(chatId, memberId);
                            const updateResult = await Chat.updateOne(
                                { _id: chat._id },
                                { $pull: { members: memberId } }
                            );

                            if (updateResult.modifiedCount > 0) {
                                console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ ${memberId} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                            } else {
                                console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –∏–∑ members –¥–ª—è —á–∞—Ç–∞ ${chatId}.`);
                            }
                        } else {
                            console.log(`–£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ NFT (${userNftCount} >= ${chat.nft.nftRequirement}).`);
                        }
                    } catch (err) {
                        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –≤ —á–∞—Ç–µ ${chatId}:`, err.message);

                        if (err.message.includes('USER_NOT_PARTICIPANT')) {
                            console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ ${memberId} —É–∂–µ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ —á–∞—Ç–µ. –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã.`);
                            const updateResult = await Chat.updateOne(
                                { _id: chat._id },
                                { $pull: { members: memberId } }
                            );

                            if (updateResult.modifiedCount > 0) {
                                console.log(`–£—á–∞—Å—Ç–Ω–∏–∫ ${memberId} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ members –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.`);
                            } else {
                                console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ ${memberId} –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.`);
                            }
                        }
                    }
                    await delay(2750); 
                }
                await delay(3750); 
            }
        
            console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —á–∞—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.');
        }, 28800000); // 8 —á–∞—Å–æ–≤
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handlePrivateNftChats:', error.message);
    }
}