import { getAllPublicChats } from "../db/chatMethods.js";
import { getJettonDecimals } from "../db/jettonMethods.js";
import getJettonBalance from "../utils/getUserBalances/getJettonBalance.js";
import { getWalletAddressByUserId } from "../db/userMethods.js";

export async function handlePublicChats(bot) {
    try {
        const publicChats = await getAllPublicChats();

        if (!publicChats.length) {
            console.log('–ù–µ—Ç –ø—É–±–ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.');
            return;
        }

        console.log(`–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—É–±–ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤: ${publicChats.length}`);

        bot.on('message', async (msg) => {
            try {
                console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ ${msg.chat.id} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${msg.from.id}`);
                const chatId = msg.chat.id;

                if (msg.chat.type === 'private') {
                    console.log('–ü—Ä–æ–ø—É—â–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ª–∏—á–Ω–æ–≥–æ —á–∞—Ç–∞.');
                    return;
                }

                if (msg.new_chat_members || msg.left_chat_member || msg.pinned_message) {
                    console.log(`–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ ${chatId} –ø—Ä–æ–ø—É—â–µ–Ω–æ.`);
                    return;
                }

                if (msg.sender_chat) {
                    console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–∞–Ω–∞–ª–∞ (ID: ${msg.sender_chat.id}) –ø—Ä–æ–ø—É—â–µ–Ω–æ.`);
                    return;
                }

                const chat = publicChats.find((c) => c.chatId === chatId.toString());
                if (!chat || !chat.jetton || !chat.jetton.jettonAddress) {
                    console.log(`–ß–∞—Ç ${chatId} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Jetton.`);
                    return;
                }

                const userId = msg.from.id;

                const isAdmin = await bot
                    .getChatMember(chatId, userId)
                    .then((member) => ['administrator', 'creator'].includes(member.status))
                    .catch(() => false);

                if (isAdmin) {
                    console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–µ ${chatId}, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.`);
                    return;
                }

                try {
                    const walletAddress = await getWalletAddressByUserId(userId);
                    let userBalance = 0;

                    if (walletAddress) {
                        console.log(`–ö–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${walletAddress}`);
                        const decimals = await getJettonDecimals(chat.jetton.jettonAddress);
                        userBalance = await getJettonBalance(
                            walletAddress,
                            chat.jetton.jettonAddress,
                            decimals
                        );
                        console.log(`–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –¥–ª—è Jetton ${chat.jetton.symbol}: ${userBalance}`);

                        if (userBalance < chat.jetton.jettonRequirement) {
                            console.log(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π –±–∞–ª–∞–Ω—Å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ —á–∞—Ç–µ ${chatId}.`);
                            await muteUser(bot, chatId, userId, msg.message_id, chat.jetton);
                        }
                    } else {
                        console.log(`–ö–æ—à–µ–ª–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`);
                        await muteUser(bot, chatId, userId, msg.message_id, chat.jetton, true);
                    }
                } catch (error) {
                    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ —á–∞—Ç–µ ${chatId}:`, error.message);
                }
            } catch (msgError) {
                console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', msgError.message);
            }
        });

        console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö —á–∞—Ç–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handlePublicChats:', error.message);
    }
}

async function muteUser(bot, chatId, userId, messageId, jetton, noWallet = false) {
    try {
        console.log(`–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ —á–∞—Ç–µ ${chatId}.`);
        await bot.deleteMessage(chatId, messageId);
    } catch (deleteError) {
        console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}: ${deleteError.message}`);
    }

    const muteUntil = Math.floor(Date.now() / 1000) + 60;
    console.log(`–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –≤ —á–∞—Ç–µ ${chatId} –Ω–∞ 60 —Å–µ–∫—É–Ω–¥.`);
    await bot.restrictChatMember(chatId, userId, {
        can_send_messages: false,
        until_date: muteUntil,
    });

    const warningMessage = noWallet
        ? `
‚ö†Ô∏è –ß—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –∏ –∏–º–µ—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: <b>${jetton.jettonRequirement} $${jetton.symbol}</b>
        `
        : `
‚ö†Ô∏è –ß—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: <b>${jetton.jettonRequirement} $${jetton.symbol}</b>
        `;

    const botMessage = await bot.sendMessage(chatId, warningMessage, {
        parse_mode: 'HTML',
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'ü§ñ –ü–µ—Ä–µ–π—Ç–∏ –≤ –ë–æ—Ç–∞ üí∏',
                        url: 'https://t.me/simple_moder_bot',
                    },
                ],
            ],
        },
    });

    setTimeout(async () => {
        try {
            await bot.deleteMessage(chatId, botMessage.message_id);
            console.log(`–°–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ ${chatId} —É–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 12 —Å–µ–∫—É–Ω–¥.`);
        } catch (deleteError) {
            console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ —á–∞—Ç–µ ${chatId}: ${deleteError.message}`);
        }
    }, 12000);
}